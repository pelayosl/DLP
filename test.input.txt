/*
	Control Test
	PLD 24/25
*/

// Global variables
let integer:int;
let character:char;
let real:number;

let MATRIXSIZE:int;
let matrix:[10][10]int;

// Functions
function setValue(row:int, columnn:int, value:int): void {
	if (row >= 0 && row < MATRIXSIZE && columnn >= 0 && columnn < MATRIXSIZE) 
		matrix[row][column] = value;
	
}
function getValue(row:int, columnn:int): int {
	if ((row < 0 || row >= MATRIXSIZE) || (columnn < 0 && columnn >= MATRIXSIZE)){
		return -1;
	}
	else 	
		return matrix[row][column];
	
}
function fill(value:int): void{
	let i,j:int;  // Multiple variable definition
	i = 0;	
	while (i < MATRIXSIZE){
		j = 0;
		while (j < MATRIXSIZE){
			setValue(i,j, value);
			j = j + 1;
		}
		i = i + 1;
	}
}
function show(): void{
	let i,j:int;
	i = 0;	
	log '[','\n';
	while (i < MATRIXSIZE){
		j = 0;
		log '\t','[';
		while (j < MATRIXSIZE) {
			log getValue(i,j);
			if (j != MATRIXSIZE - 1){
				log ',';
			}
			j = j + 1;
		}
		log ']','\n';	
		i = i + 1;
	}	
	log ']';	
}

// Record
let date: [
	let day, mounth, year:int;	
];

// Main program
// function no_main(): void{ // Uncomment to test
function main(): void{ // Uncomment to test
	let characters:[1][2][3]char;
	MATRIXSIZE = 10;
	fill(1);
	setValue(5,5,5);
	integer = getValue(5,5);
	if (integer == 5) { // Uncomment { to test
		log 'O','k','\n';
	}
	else {
		log 'E','r','r','o','r','\n';
	}
	show();
	
	date.day = 4;
	date.mounth = 3;
	date.year = 2020;
	
	character = (date.day as char);
	real = 4.5 + 4. * 3e+3 - 5.4E-3;
	input integer, character, real;
	//let error:int; // Uncomment to test
}
// function no_function(): {} // Uncomment to test