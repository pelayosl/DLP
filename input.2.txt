
// Global variables
let i,n,j:int;
let c:char;

let pair: [ 
	let integer:int;
	let character:char;
];

// Functions
function p(): void {}

function f(r:number, e:int):int {
	let real:number;
	let c:char;
	real = (pair.character as number)+(pair.integer as number)+r+(e as number);
	c='0';
	return (c as int);
}

let matrix:[10][10]int;

function fill(row:int, value:int, increment:int): void{
	let i,inc:int;
	i=0;
	inc=increment;
	while (i<10) {
		matrix[row][i]=value+inc; 
		i=i+1;
		inc=inc+increment;
	}
}

function show(row:int): void{
	let i:int;
	i=0;
	while (i<10) {
		log '(', row, ',', i, ')', ':', matrix[row][i], ' ';
		i=i+1;
	}
	log '\n';
}

// Main program
function main(): void{
	let i:int;

	p(); // Invocation (procedure) as statement
	i=0;
	pair.character='0';
	pair.integer=('0' as int);
	log f((i as number),(pair.character as int)), '\n'; // Invocation as expression

	f(1.3, 2); // Invocation (function) as statement

	i=0;
	j=0;
	while (i<10) {
		fill(i, j, 1); 
		show(i);
		i=i+1;
		j=i*10;
	}
}

